CoreModule  LoadPredJobHandlingMod

/**
ASSUMPTIONS:
This algorithm  a module for handling the jobHandling session of the workload prediction based 
auto-scaler which investigates the problem of cost-aware autoscaling along with predicted workloads in service clouds.
A created rule known as "Monitor_Service_Requests" is expected to be called during the job handling sesssions
to ensure that all requisite resources are provisioned for the autoscaling sessions to occur.

*/

//use standard plugins
use Standard
use Time
use Modularity


derived CLOUD = Agents

rule Monitor_Service_Requests =
     par
     
     											 workloadprediction:= true
                                             print"Workload prediction is made"
 // Requested Services and Existing services are supplied together with Job Queuing Resource List            
          while Supplied_Services and ServiceRequest(service, aresources) = true and JobQReslist_ip = active do
                            systemstate(JobState, ProcessState, JobTime) := active
                             print "Services Requests have been made"
                             
  //Once the servies are supplied, the workload predictions are made to commence the job handling process. 
                                          forall s in [CLOUD] do // change it in the original document
   
  // The utilisation level of VMs currently running in the cloud is monitored  
                                           vmult := VmUTmin
  // The number of service requests to ensure that the require threshold is supplied
                                    number_of_service_requests := NumMin		// change it in the original document	    
 										systemstate(JobState, ProcessState, JobTime) := active
// Vm Requests are made when the syste
                                                   VmRequest:=active        
                endpar
