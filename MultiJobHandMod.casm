CoreModule  MultimodeJobHandMod

//use standard plugins
use Standard

//set program for the executing agent
use Modularity
//Definition of universes
use Time
include "./JobHandVmReqMod.casm"

enum Vmpool = {	Qminn, Qmaxx}
enum VmUt = {T_900s, T_1800s, T_3600s,T_5400s}
enum DestroyVm = {True, False}
enum TimeRequest ={True_t, False_t}
//enum VMCount = {NumMin, NumAvg,NumMax}
// definition of functions to be utilized in creating signatures and rules

function vmpool : Vmpool -> BOOLEAN
function compatible : job* vm -> NUMBER
function AddVM :vm * job -> BOOLEAN
function tlevel : TLevel -> BOOLEAN 
function belongsto: Belongsto -> BOOLEAN

                

rule Job_Queuing =
              local QueReslist in par
                if  QueReslist = true and Multimode_universes = false  then
                 		 if VMCount <= NumMinn then
                   joblauncher(jobhandler(job, vm), vm) := false
                   systemstate(JobState, ProcessState, JobTime) := WAITING
                    print "System state is in the Queuing stage"             
                endpar


rule Multi_JobHand_Mod =
           seq
              par
                if  JobQReslist_ip = active   then
                {
                   systemstate( JobState, ProcessState, JobTime) := WAITING 
                 }
                    print "System is waiting "             
                endpar
                	VmRequest()
                   endseq


