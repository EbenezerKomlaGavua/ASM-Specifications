CoreASM VmCreate

/**
ASSUMPTIONS:
This is algorithm models the Vmoptimising Job Initializing algorithm of the ASM model.
The algorithm utilizes universes,Agents,signatures,functions
 and derived funtions in the modeling process.
The algorithm is expected to have generated jobs, existing vms,engaged processes 
and supplied resources  available before the modelling commences.
 The job required initialization functions must be active. 
 A joblauncher function created with which maps the jobhandler to a vms Jobhandler is expected to be mapped to ensure that job processing can be achieved.
When all the above holds; The systemstate function (which includes the JobState,Jobtime and the ProcessState) must be mapped to active.
*/

//use standard plugins
use Standard
use Modularity
use Time
include "./JobInitRequiredFunctions.casm"




init InitRule
	//----Initial rule ---
rule InitRule =
       local installJobs in seq  
          par
         // atmstatus := busy
         
          print " Required cores are supplied "
          print "Required nodes are supplied"
          print "Execution Trace is supplied"
          print "Scaling algorithm is present"
          print"-------------------------------"
           processState := undef// new_mode
          jobstate :=started
          installJobs := undef
           terminate(self) := false
            program(self) := @MainProgram   
            endpar 
            
        endseq

rule MainProgram =
      if not terminate(self) then

	  par
	  
	  
        JobInitRequiredFunctions ()//All this point jobRequests,processRequests,mappedVM,mappedJobs and installJobs are mapped to "true"
        VmCreate_JobInit
		  terminate(self) := true
		
	endpar         
    else
     program(self) :=undef	
 
 /**     
* The JobIRelist_ip is compared to "active" because it has already been compared to "true" 
*in the JobQueReqFunctions.casm module. Once JobIRelist_ip is active, it means the resources are available     
*/ 
 
 
 
 rule VmCreate_JobInit =
      par
           if  JobIReslist_ip = active  and tlevel = Tmin then
                   systemstate(JobState, ProcessState, JobTime) :=  active
                    print "VmCreate_JobInit Initializing"             
                endpar
